[{"/Users/Nickypack11/Desktop/WEBAPP/ESS/src/App.js":"1","/Users/Nickypack11/Desktop/WEBAPP/ESS/src/reportWebVitals.js":"2"},{"size":4949,"mtime":1606526412316,"results":"3","hashOfConfig":"4"},{"size":362,"mtime":1606520759340,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"iq5trp",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Nickypack11/Desktop/WEBAPP/ESS/src/App.js",["11","12"],"import React, { Component } from 'react';\nimport './App.css';\nimport firebase, {auth, provider, storage} from './firebase.js';\n\n// Run this using 'npm start' !!!\n// To do list:\n// Placement of boxes when displaying items?\n// Need to add ability to submit photos + be seen by users\n// Placement + css of dropdown for essential supplies\n// Notification system to users?\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentItem: '',\n      username: '',\n      items: [],\n      user: null\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  logout() {\n    auth.signOut()\n      .then(() => {\n        this.setState({\n          user: null\n        });\n      });\n  }\n  login() {\n    auth.signInWithPopup(provider)\n      .then((result)=> {\n        const user = result.user;\n        this.setState({\n          user\n        });\n      });\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    const itemsRef = firebase.database().ref('items');\n    const item = {\n      title: this.state.currentItem,\n      user: this.state.user.displayName || this.state.user.email\n    }\n    itemsRef.push(item);\n    this.setState({\n      currentItem: '',\n      username: ''\n    });\n  }\n  componentDidMount() {\n    const itemsRef = firebase.database().ref('items');\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user});\n      }\n    });\n    itemsRef.on('value', (snapshot) => {\n      let items = snapshot.val();\n      let newState = [];\n      for (let item in items) {\n        newState.push({\n          id: item,\n          title: items[item].title,\n          user: items[item].user\n        });\n      }\n      this.setState({\n        items: newState\n      });\n    });\n  }\n  removeItem(itemId) {\n    const itemRef = firebase.database().ref(`/items/${itemId}`);\n    itemRef.remove();\n  }\n  render() {\n    return (\n      <div className='app'>\n        <header>\n          <div className=\"wrapper\">\n            <h1>Essential Supplies Stock</h1>\n            {this.state.user ?\n              <button onClick={this.logout}>Logout</button>                \n            :\n              <button onClick={this.login}>Log In</button>              \n            }\n          </div>\n        </header>\n        {this.state.user ?\n          <div>\n            <div className='user-profile'>\n              <img src={this.state.user.photoURL} />\n            </div>\n            <div className='container'>\n              {/* .. */}\n              <section className='display-item'>\n                <div className=\"wrapper\">\n                  <ul>\n                    {this.state.items.map((item) => {\n                      return (\n                        <li key={item.id}>\n                          <h3>{item.title}</h3>\n                          <p>Product: {item.user}\n                            {item.user === this.state.user.displayName || item.user === this.state.user.email ?\n                              <button onClick={() => this.removeItem(item.id)}>Remove Item</button> : null}\n                          </p>\n                        </li>\n                      )\n                    })}\n                  </ul>\n                </div>\n              </section>\n            </div>\n            <div className='container'>\n              <section className='add-item'>\n                <form onSubmit={this.handleSubmit}>\n                  <input type=\"text\" name=\"username\" placeholder=\"What's your name?\" value={this.state.user.displayName || this.state.user.email} />\n                  <input type=\"text\" name=\"currentItem\" placeholder=\"What are you bringing?\" onChange={this.handleChange} value={this.state.currentItem} />\n                  <label for=\"item\">What kind of essential supply?</label>\n                  <select name=\"Essential Supplies\" id=\"item\">\n                      <option value=\"\">--Please choose an option--</option>\n                      <option value=\"Toilet Paper\">Toilet Paper</option>\n                      <option value=\"Pack of Water Bottles\">Pack of Water Bottles</option>\n                      <option value=\"Hand Sanitizer\">Hand Sanitizer</option>\n                      <option value=\"Canned Food\">Canned Food</option>\n                      <option value=\"Paper\">Paper</option>\n                  </select>\n                  <input type = \"text\" name = \"location\" placeholder = \"Where did you find this?\" value = {this.handleChange}/>\n                  <button>Add Item</button>\n                </form>\n              </section>\n            </div>\n          </div>\n          :\n          <div className='wrapper'>\n            <p> <h2> You must be logged in to see the stock.</h2></p>\n          </div>\n        }\n      </div>\n    );\n  } \n}\nexport default App;\n","/Users/Nickypack11/Desktop/WEBAPP/ESS/src/reportWebVitals.js",[],{"ruleId":"13","severity":1,"message":"14","line":3,"column":35,"nodeType":"15","messageId":"16","endLine":3,"endColumn":42},{"ruleId":"17","severity":1,"message":"18","line":102,"column":15,"nodeType":"19","endLine":102,"endColumn":53},"no-unused-vars","'storage' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]